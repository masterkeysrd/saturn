---
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Saturn Personal Productivity Suite

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - local
      - dev
      - prod
    Description: The environment to deploy the stack to (local, dev, prod)
  Cors:
    Type: String
    Default: "*"
    Description: The CORS policy to apply to the API Gateway

Globals:
  Function:
    Timeout: 5
    MemorySize: 128
    Handler: bootstrap
    Runtime: provided.al2023
    Architectures:
      - x86_64
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment

Resources:
  SaturnApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${Environment}-saturn-api"
      StageName: !Ref Environment

  ExpenseGetFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: !Sub "${Environment}-saturn-expense-get"
      CodeUri: ./cmd/functions/expense/get
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /expenses/{id}
            Method: GET
            RestApiId: !Ref SaturnApi
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ExpenseTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ExpenseTable

  ExpenseCreateFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: !Sub "${Environment}-saturn-expense-create"
      CodeUri: ./cmd/functions/expense/create
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /expenses
            Method: POST
            RestApiId: !Ref SaturnApi
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ExpenseTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ExpenseTable

  ExpenseListFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: !Sub "${Environment}-saturn-expense-list"
      CodeUri: ./cmd/functions/expense/list
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /expenses
            Method: GET
            RestApiId: !Ref SaturnApi
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ExpenseTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ExpenseTable

  ExpenseUpdateFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: !Sub "${Environment}-saturn-expense-update"
      CodeUri: ./cmd/functions/expense/update
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /expenses/{id}
            Method: PUT
            RestApiId: !Ref SaturnApi
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ExpenseTable

  ExpenseTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub "${Environment}-saturn-expenses"
      PrimaryKey:
        Name: id
        Type: String
